
************************* STARTING *************************

shared: &pool_list_head:state.c:28
        &pool_list_tail:state.c:29
        alloc.cur:state.c:38
        alloc.prev:state.c:38
        alloc.next:state.c:38
&pool_list_head:state.c:28 is protected by:
  pool_list_lock:state.c:32
  pool_list_lock:state.c:32
  concrete pool_list_lock:state.c:32
&pool_list_tail:state.c:29 is protected by:
  pool_list_lock:state.c:32
  pool_list_lock:state.c:32
  concrete pool_list_lock:state.c:32

Warning: Possible data race: alloc.cur:state.c:38 is protected by non-linear or concrete lock(s):
  (*new_pool).pool_lock:state.c:36
  non linear concrete new_pool->pool_lock:state.c:42
  (**p, **tmp, *get_new_pool.return, *qsd_pmalloc.p, *go2.p, *qsd_pmalloc.p, *qsd_pmalloc.p).pool_lock:state.c:107
  non linear concrete new_pool->pool_lock::-1 -> get_new_pool state.c:107
  non linear concrete new_pool->pool_lock::-1 -> go1 state.c:121 -> get_new_pool state.c:107
  non linear concrete new_pool->pool_lock::-1 -> go1 state.c:120 -> get_new_pool state.c:107
 references:
  dereference at state.c:84
    locations possibly dereferenced: 
      (*new_pool).cur:state.c:36
      (**p, **tmp, *get_new_pool.return, *qsd_pmalloc.p, *go2.p, *qsd_pmalloc.p, *qsd_pmalloc.p).cur:state.c:107
      alloc.cur:state.c:38
    locks acquired at dereference: 
      (*new_pool).pool_lock:state.c:36
      non linear concrete new_pool->pool_lock:state.c:42
      (**p, **tmp, *get_new_pool.return, *qsd_pmalloc.p, *go2.p, *qsd_pmalloc.p, *qsd_pmalloc.p).pool_lock:state.c:107
      non linear concrete new_pool->pool_lock::-1 -> get_new_pool state.c:107
      non linear concrete new_pool->pool_lock::-1 -> go1 state.c:121 -> get_new_pool state.c:107
      non linear concrete new_pool->pool_lock::-1 -> go1 state.c:120 -> get_new_pool state.c:107
    in: FORK at state.c:121 -> go1 state.c:121 -> qsd_pmalloc state.c:108

  dereference at state.c:84
    locations possibly dereferenced: 
      (*new_pool).cur:state.c:36
      (**p, **tmp, *get_new_pool.return, *qsd_pmalloc.p, *go2.p, *qsd_pmalloc.p, *qsd_pmalloc.p).cur:state.c:107
      alloc.cur:state.c:38
    locks acquired at dereference: 
      (*new_pool).pool_lock:state.c:36
      non linear concrete new_pool->pool_lock:state.c:42
      (**p, **tmp, *get_new_pool.return, *qsd_pmalloc.p, *go2.p, *qsd_pmalloc.p, *qsd_pmalloc.p).pool_lock:state.c:107
      non linear concrete new_pool->pool_lock::-1 -> get_new_pool state.c:107
      non linear concrete new_pool->pool_lock::-1 -> go1 state.c:121 -> get_new_pool state.c:107
      non linear concrete new_pool->pool_lock::-1 -> go1 state.c:120 -> get_new_pool state.c:107
    in: FORK at state.c:120 -> go1 state.c:120 -> qsd_pmalloc state.c:108

  dereference at state.c:84
    locations possibly dereferenced: 
      (*new_pool).cur:state.c:36
      (**p, **tmp, *get_new_pool.return, *qsd_pmalloc.p, *go2.p, *qsd_pmalloc.p, *qsd_pmalloc.p).cur:state.c:107
      alloc.cur:state.c:38
    locks acquired at dereference: 
      (*new_pool).pool_lock:state.c:36
      non linear concrete new_pool->pool_lock:state.c:42
      (**p, **tmp, *get_new_pool.return, *qsd_pmalloc.p, *go2.p, *qsd_pmalloc.p, *qsd_pmalloc.p).pool_lock:state.c:107
      non linear concrete new_pool->pool_lock::-1 -> get_new_pool state.c:107
      non linear concrete new_pool->pool_lock::-1 -> go1 state.c:121 -> get_new_pool state.c:107
      non linear concrete new_pool->pool_lock::-1 -> go1 state.c:120 -> get_new_pool state.c:107
    in: main at state.c:122 -> go1 state.c:121 -> qsd_pmalloc state.c:108

  dereference at state.c:84
    locations possibly dereferenced: 
      (*new_pool).cur:state.c:36
      (**p, **tmp, *get_new_pool.return, *qsd_pmalloc.p, *go2.p, *qsd_pmalloc.p, *qsd_pmalloc.p).cur:state.c:107
      alloc.cur:state.c:38
    locks acquired at dereference: 
      (*new_pool).pool_lock:state.c:36
      non linear concrete new_pool->pool_lock:state.c:42
      (**p, **tmp, *get_new_pool.return, *qsd_pmalloc.p, *go2.p, *qsd_pmalloc.p, *qsd_pmalloc.p).pool_lock:state.c:107
      non linear concrete new_pool->pool_lock::-1 -> get_new_pool state.c:107
      non linear concrete new_pool->pool_lock::-1 -> go1 state.c:121 -> get_new_pool state.c:107
      non linear concrete new_pool->pool_lock::-1 -> go1 state.c:120 -> get_new_pool state.c:107
    in: main at state.c:122 -> go1 state.c:120 -> qsd_pmalloc state.c:108

  dereference at state.c:84
    locations possibly dereferenced: 
      (*new_pool).cur:state.c:36
      (**p, **tmp, *get_new_pool.return, *qsd_pmalloc.p, *go2.p, *qsd_pmalloc.p, *qsd_pmalloc.p).cur:state.c:107
      alloc.cur:state.c:38
    locks acquired at dereference: 
      (*new_pool).pool_lock:state.c:36
      non linear concrete new_pool->pool_lock:state.c:42
      (**p, **tmp, *get_new_pool.return, *qsd_pmalloc.p, *go2.p, *qsd_pmalloc.p, *qsd_pmalloc.p).pool_lock:state.c:107
      non linear concrete new_pool->pool_lock::-1 -> get_new_pool state.c:107
      non linear concrete new_pool->pool_lock::-1 -> go1 state.c:121 -> get_new_pool state.c:107
      non linear concrete new_pool->pool_lock::-1 -> go1 state.c:120 -> get_new_pool state.c:107
    in: FORK at state.c:111 -> go2 state.c:111 -> qsd_pmalloc state.c:100

alloc.prev:state.c:38 is protected by:
  pool_list_lock:state.c:32
  pool_list_lock:state.c:32
  concrete pool_list_lock:state.c:32
alloc.next:state.c:38 is protected by:
  pool_list_lock:state.c:32
  pool_list_lock:state.c:32
  concrete pool_list_lock:state.c:32
*************************** DONE ***************************


